@startuml
interface api.MQProducer{

}
interface api.MQConsumer{

}
interface api.MQClientInstance{

       
}
class api.ClientInstanceImpl{
}

namespace api{
    MQClientInstance o-- manage.MqClientManager
    MQProducer o-- manage.DefaultMQProducer
    MQConsumer o-- manage.DefaultMQPushConsumer
     MQConsumer o-- manage.DefaultMQPullConsumer
}

class manage.MqClientManager{
kernelState
}
class manage.PullMessageController{

}
class kernel.AllocateMessageQueueStrategy{
}
class manage.ClientFactory{
mqConsumerTable
mqProducerTable
}
class manage.DefaultMQPushConsumer{
}
class manage.DefaultMQPullConsumer{
    to be done
}
class manage.DefaultMQProducer{
 }
 class kernel.MqClient{

 }
 class kernel.MessageListener{
 }
  class remoting.RemotingClient{
   invokeSync
   invokeAsync
   invokeOneWay
  }
 class remoting.RemotingCommand{
  customHeader
  requestCode
  responseCode
 }
  class remoting.ClientConfig{
   nameSrvAddr
   clientIP
   instanceName
  }
  class remoting.ClientRequestProcessor{
     receive request and invoke the method.
     GET_CONSUMER_STATUS_FROM_CLIENT
     GET_CONSUMER_RUNNING_INFO
     ...
    }
    class remoting.SerializerHandler{
       JsonSerializer
       RocketMqSerializer
    }


namespace kernel{


manage.PullMessageController *-- manage.ClientFactory:contains



}

namespace kernel{
    MqClientAPI o-- remoting.RemotingClient:contains
    OffsetStore o-- MqClient
    PullAPIWrapper o-- MqClient
    MqClient o-- MqClientAPI
    PullAPIWrapper o-- MqClientAPI
    Rebalance o-- MqClient
    Rebalance o-- OffsetStore
    Rebalance o-- AllocateMessageQueueStrategy
    ConsumeMessageService o-- SendMessageBackProducerkernel
    ConsumeMessageService o-- OffsetStore
    ConsumeMessageService o-- MessageListener
}

namespace remoting {
  RemotingClient  *-- RemotingCommand
  RemotingClient *-- ClientConfig
    RemotingClient  *-- ClientRequestProcessor
    RemotingClient *-- SerializerHandler


}

namespace manage{
    MqClientManager o-- PullMessageController
    MqClientManager o-- ClientFactory
    manage.ClientFactory *-- DefaultMQPushConsumer:contains
    manage.ClientFactory *-- DefaultMQPullConsumer:contains
    DefaultMQPushConsumer *-- kernel.PullAPIWrapper : contains
    DefaultMQPushConsumer *-- kernel.OffsetStore : contains
    DefaultMQPushConsumer *-- kernel.Rebalance : contains
    DefaultMQPushConsumer *-- kernel.ConsumeMessageService : contains
    manage.ClientFactory *-- DefaultMQProducer:contains

    DefaultMQProducer *-- kernel.MqClient :contains
}


note top of remoting.RemotingClient :（sync|aysc|oneWay）
note top of remoting :net，serialize，connect，request response

@enduml